{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\email-campaign-frontend\\\\src\\\\components\\\\campaign\\\\Campaign.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Campaign.css';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Campaign = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n  const [error, setError] = useState({\n    name: '',\n    csv: ''\n  });\n  const navigate = useNavigate();\n  const isValidEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const handleCsvUpload = e => {\n    const file = e.target.files[0];\n    setCsvFile(file);\n    setError(prev => ({\n      ...prev,\n      csv: ''\n    }));\n    if (file) {\n      const validTypes = ['text/csv', 'application/vnd.ms-excel'];\n      if (!validTypes.includes(file.type)) {\n        setError(prev => ({\n          ...prev,\n          csv: 'Please upload a valid CSV file.'\n        }));\n        setCsvFile(null);\n        return;\n      }\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          const {\n            data\n          } = results;\n          const hasEmailColumn = data.some(row => row.email);\n          const hasNameColumn = data.some(row => row.name);\n          if (!hasEmailColumn || !hasNameColumn) {\n            setError(prev => ({\n              ...prev,\n              csv: 'CSV must contain both name and email fields with values.'\n            }));\n            setCsvFile(null);\n            return;\n          }\n          for (const row of data) {\n            console.log('Row data:', row); // Check the entire row (should be an object)\n\n            // If you need to iterate over the keys/fields of each row object\n            for (const key in row) {\n              if (row.hasOwnProperty(key)) {\n                console.log(`${key}: ${row[key]}`); // Logs each field and its value\n              }\n            }\n          }\n          setError(prev => ({\n            ...prev,\n            csv: ''\n          }));\n        },\n        error: error => {\n          setError(prev => ({\n            ...prev,\n            csv: 'Error parsing CSV file: ' + error.message\n          }));\n          setCsvFile(null);\n        }\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let hasError = false;\n    if (!name) {\n      setError(prev => ({\n        ...prev,\n        name: 'Campaign name is required.'\n      }));\n      hasError = true;\n    } else {\n      setError(prev => ({\n        ...prev,\n        name: ''\n      }));\n    }\n    if (!csvFile) {\n      setError(prev => ({\n        ...prev,\n        csv: 'CSV file is required.'\n      }));\n      hasError = true;\n    } else {\n      setError(prev => ({\n        ...prev,\n        csv: ''\n      }));\n    }\n    if (hasError) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('csv', csvFile);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:8000/api/campaign', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}` // Add the token to the headers\n        }\n      });\n      console.log(response);\n    } catch (error) {\n      console.error(error.response.data);\n      setError(prev => ({\n        ...prev,\n        csv: 'Failed to create campaign.'\n      }));\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaign-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"campaign-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Campaign Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleCsvUpload,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error.csv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Create Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(Campaign, \"Gzw2Nv1der+eK9LJkoC7UHeoSUQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Campaign;\nexport default Campaign;\nvar _c;\n$RefreshReg$(_c, \"Campaign\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Papa","jsxDEV","_jsxDEV","Campaign","_s","name","setName","csvFile","setCsvFile","error","setError","csv","navigate","isValidEmail","email","emailRegex","test","handleCsvUpload","e","file","target","files","prev","validTypes","includes","type","parse","header","complete","results","data","hasEmailColumn","some","row","hasNameColumn","console","log","key","hasOwnProperty","message","handleSubmit","preventDefault","hasError","formData","FormData","append","token","localStorage","getItem","response","post","headers","Authorization","handleLogout","removeItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/email-campaign-frontend/src/components/campaign/Campaign.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Campaign.css';\r\nimport Papa from 'papaparse';\r\n\r\nconst Campaign = () => {\r\n    const [name, setName] = useState('');\r\n    const [csvFile, setCsvFile] = useState(null);\r\n    const [error, setError] = useState({ name: '', csv: '',});\r\n    const navigate = useNavigate();\r\n    const isValidEmail = (email) => {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailRegex.test(email);\r\n    };\r\n    const handleCsvUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        setCsvFile(file);\r\n        setError((prev) => ({ ...prev, csv: '' }));\r\n        if (file) {\r\n            const validTypes = ['text/csv', 'application/vnd.ms-excel'];\r\n            if (!validTypes.includes(file.type)) {\r\n                setError((prev) => ({ ...prev, csv: 'Please upload a valid CSV file.' }));\r\n                setCsvFile(null);\r\n                return;\r\n            }\r\n            Papa.parse(file, {\r\n                header: true,\r\n                complete: (results) => {\r\n                    const { data } = results;\r\n                    const hasEmailColumn = data.some(row => row.email);\r\n                    const hasNameColumn = data.some(row => row.name);\r\n                    if (!hasEmailColumn || !hasNameColumn) {\r\n                        setError((prev) => ({\r\n                            ...prev,\r\n                            csv: 'CSV must contain both name and email fields with values.',\r\n                        }));\r\n                        setCsvFile(null);\r\n                        return;\r\n                    }\r\n                    for (const row of data) {\r\n                        console.log('Row data:', row); // Check the entire row (should be an object)\r\n                        \r\n                        // If you need to iterate over the keys/fields of each row object\r\n                        for (const key in row) {\r\n                            if (row.hasOwnProperty(key)) {\r\n                                console.log(`${key}: ${row[key]}`); // Logs each field and its value\r\n                            }\r\n                        }\r\n                    }\r\n                    setError((prev) => ({ ...prev, csv: '' }));\r\n                },\r\n                error: (error) => {\r\n                    setError((prev) => ({ ...prev, csv: 'Error parsing CSV file: ' + error.message }));\r\n                    setCsvFile(null);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let hasError = false;\r\n        if (!name) {\r\n            setError((prev) => ({ ...prev, name: 'Campaign name is required.' }));\r\n            hasError = true;\r\n        } else {\r\n            setError((prev) => ({ ...prev, name: '' }));\r\n        }\r\n        if (!csvFile) {\r\n            setError((prev) => ({ ...prev, csv: 'CSV file is required.' }));\r\n            hasError = true;\r\n        } else {\r\n            setError((prev) => ({ ...prev, csv: '' }));\r\n        }\r\n        if (hasError) {\r\n            return;\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('csv', csvFile);\r\n        try {\r\n            const token = localStorage.getItem('token'); \r\n            const response = await axios.post('http://localhost:8000/api/campaign', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${token}`, // Add the token to the headers\r\n                },\r\n            });\r\n            console.log(response);\r\n        } catch (error) {\r\n            console.error(error.response.data);\r\n            setError((prev) => ({ ...prev, csv: 'Failed to create campaign.' }));\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <div className=\"campaign-container\">\r\n            <button className=\"logout-button\" onClick={handleLogout}>\r\n                Logout\r\n            </button>\r\n            <form className=\"campaign-form\" onSubmit={handleSubmit}>\r\n                <h2>Create Campaign</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Campaign Name\" \r\n                    value={name} \r\n                    onChange={(e) => setName(e.target.value)}  \r\n                    className=\"input-field\"\r\n                />\r\n                <div className=\"error-message\">{error.name}</div>\r\n                <input \r\n                    type=\"file\" \r\n                    accept=\".csv\" \r\n                    onChange={handleCsvUpload}  \r\n                    className=\"file-input\"\r\n                />\r\n                <div className=\"error-message\">{error.csv}</div>\r\n                <button type=\"submit\" className=\"submit-button\">Create Campaign</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Campaign;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC;IAAEQ,IAAI,EAAE,EAAE;IAAEM,GAAG,EAAE;EAAG,CAAC,CAAC;EACzD,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAMC,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;EACjC,CAAC;EACD,MAAMG,eAAe,GAAIC,CAAC,IAAK;IAC3B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9Bb,UAAU,CAACW,IAAI,CAAC;IAChBT,QAAQ,CAAEY,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEX,GAAG,EAAE;IAAG,CAAC,CAAC,CAAC;IAC1C,IAAIQ,IAAI,EAAE;MACN,MAAMI,UAAU,GAAG,CAAC,UAAU,EAAE,0BAA0B,CAAC;MAC3D,IAAI,CAACA,UAAU,CAACC,QAAQ,CAACL,IAAI,CAACM,IAAI,CAAC,EAAE;QACjCf,QAAQ,CAAEY,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEX,GAAG,EAAE;QAAkC,CAAC,CAAC,CAAC;QACzEH,UAAU,CAAC,IAAI,CAAC;QAChB;MACJ;MACAR,IAAI,CAAC0B,KAAK,CAACP,IAAI,EAAE;QACbQ,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAGC,OAAO,IAAK;UACnB,MAAM;YAAEC;UAAK,CAAC,GAAGD,OAAO;UACxB,MAAME,cAAc,GAAGD,IAAI,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACnB,KAAK,CAAC;UAClD,MAAMoB,aAAa,GAAGJ,IAAI,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAAC5B,IAAI,CAAC;UAChD,IAAI,CAAC0B,cAAc,IAAI,CAACG,aAAa,EAAE;YACnCxB,QAAQ,CAAEY,IAAI,KAAM;cAChB,GAAGA,IAAI;cACPX,GAAG,EAAE;YACT,CAAC,CAAC,CAAC;YACHH,UAAU,CAAC,IAAI,CAAC;YAChB;UACJ;UACA,KAAK,MAAMyB,GAAG,IAAIH,IAAI,EAAE;YACpBK,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,GAAG,CAAC,CAAC,CAAC;;YAE/B;YACA,KAAK,MAAMI,GAAG,IAAIJ,GAAG,EAAE;cACnB,IAAIA,GAAG,CAACK,cAAc,CAACD,GAAG,CAAC,EAAE;gBACzBF,OAAO,CAACC,GAAG,CAAC,GAAGC,GAAG,KAAKJ,GAAG,CAACI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;cACxC;YACJ;UACJ;UACA3B,QAAQ,CAAEY,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAEX,GAAG,EAAE;UAAG,CAAC,CAAC,CAAC;QAC9C,CAAC;QACDF,KAAK,EAAGA,KAAK,IAAK;UACdC,QAAQ,CAAEY,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAEX,GAAG,EAAE,0BAA0B,GAAGF,KAAK,CAAC8B;UAAQ,CAAC,CAAC,CAAC;UAClF/B,UAAU,CAAC,IAAI,CAAC;QACpB;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EAED,MAAMgC,YAAY,GAAG,MAAOtB,CAAC,IAAK;IAC9BA,CAAC,CAACuB,cAAc,CAAC,CAAC;IAClB,IAAIC,QAAQ,GAAG,KAAK;IACpB,IAAI,CAACrC,IAAI,EAAE;MACPK,QAAQ,CAAEY,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEjB,IAAI,EAAE;MAA6B,CAAC,CAAC,CAAC;MACrEqC,QAAQ,GAAG,IAAI;IACnB,CAAC,MAAM;MACHhC,QAAQ,CAAEY,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEjB,IAAI,EAAE;MAAG,CAAC,CAAC,CAAC;IAC/C;IACA,IAAI,CAACE,OAAO,EAAE;MACVG,QAAQ,CAAEY,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEX,GAAG,EAAE;MAAwB,CAAC,CAAC,CAAC;MAC/D+B,QAAQ,GAAG,IAAI;IACnB,CAAC,MAAM;MACHhC,QAAQ,CAAEY,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEX,GAAG,EAAE;MAAG,CAAC,CAAC,CAAC;IAC9C;IACA,IAAI+B,QAAQ,EAAE;MACV;IACJ;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAExC,IAAI,CAAC;IAC7BsC,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEtC,OAAO,CAAC;IAC/B,IAAI;MACA,MAAMuC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMnD,KAAK,CAACoD,IAAI,CAAC,oCAAoC,EAAEP,QAAQ,EAAE;QAC9EQ,OAAO,EAAE;UACL,cAAc,EAAE,qBAAqB;UACrCC,aAAa,EAAE,UAAUN,KAAK,EAAE,CAAE;QACtC;MACJ,CAAC,CAAC;MACFX,OAAO,CAACC,GAAG,CAACa,QAAQ,CAAC;IACzB,CAAC,CAAC,OAAOxC,KAAK,EAAE;MACZ0B,OAAO,CAAC1B,KAAK,CAACA,KAAK,CAACwC,QAAQ,CAACnB,IAAI,CAAC;MAClCpB,QAAQ,CAAEY,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEX,GAAG,EAAE;MAA6B,CAAC,CAAC,CAAC;IACxE;EACJ,CAAC;EAED,MAAM0C,YAAY,GAAGA,CAAA,KAAM;IACvBN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/B1C,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIV,OAAA;IAAKqD,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BtD,OAAA;MAAQqD,SAAS,EAAC,eAAe;MAACE,OAAO,EAAEJ,YAAa;MAAAG,QAAA,EAAC;IAEzD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT3D,OAAA;MAAMqD,SAAS,EAAC,eAAe;MAACO,QAAQ,EAAEtB,YAAa;MAAAgB,QAAA,gBACnDtD,OAAA;QAAAsD,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB3D,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXsC,WAAW,EAAC,eAAe;QAC3BC,KAAK,EAAE3D,IAAK;QACZ4D,QAAQ,EAAG/C,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACE,MAAM,CAAC4C,KAAK,CAAE;QACzCT,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACF3D,OAAA;QAAKqD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE/C,KAAK,CAACJ;MAAI;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjD3D,OAAA;QACIuB,IAAI,EAAC,MAAM;QACXyC,MAAM,EAAC,MAAM;QACbD,QAAQ,EAAEhD,eAAgB;QAC1BsC,SAAS,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACF3D,OAAA;QAAKqD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE/C,KAAK,CAACE;MAAG;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChD3D,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAC8B,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACzD,EAAA,CA1HID,QAAQ;EAAA,QAIOJ,WAAW;AAAA;AAAAoE,EAAA,GAJ1BhE,QAAQ;AA4Hd,eAAeA,QAAQ;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}