{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\email-campaign-frontend\\\\src\\\\components\\\\campaign\\\\Campaign.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Campaign.css';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Campaign = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n  const [error, setError] = useState({\n    name: '',\n    csv: ''\n  });\n  const navigate = useNavigate();\n  const handleCsvUpload = e => {\n    const file = e.target.files[0];\n    setCsvFile(file);\n    setError(prev => ({\n      ...prev,\n      csv: ''\n    })); // Clear previous CSV error\n    if (file) {\n      const validTypes = ['text/csv', 'application/vnd.ms-excel'];\n      if (!validTypes.includes(file.type)) {\n        setError(prev => ({\n          ...prev,\n          csv: 'Please upload a valid CSV file.'\n        }));\n        setCsvFile(null);\n        return;\n      }\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          const emails = results.data.map(row => row.email).filter(email => email);\n          const names = results.data.map(row => row.name).filter(name => name);\n          if (emails.length === 0 || names.length === 0) {\n            setError(prev => ({\n              ...prev,\n              csv: 'CSV must contain both email and name fields.'\n            }));\n            setCsvFile(null);\n          }\n        },\n        error: error => {\n          setError(prev => ({\n            ...prev,\n            csv: 'Error parsing CSV file: ' + error.message\n          }));\n          setCsvFile(null);\n        }\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let hasError = false;\n\n    // Validate campaign name\n    if (!name) {\n      setError(prev => ({\n        ...prev,\n        name: 'Campaign name is required.'\n      }));\n      hasError = true;\n    } else {\n      setError(prev => ({\n        ...prev,\n        name: ''\n      })); // Clear previous error\n    }\n\n    // Validate CSV file\n    if (!csvFile) {\n      setError(prev => ({\n        ...prev,\n        csv: 'CSV file is required.'\n      }));\n      hasError = true;\n    } else {\n      setError(prev => ({\n        ...prev,\n        csv: ''\n      })); // Clear previous error\n    }\n    if (hasError) {\n      return; // Stop if there are errors\n    }\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('csv', csvFile);\n    try {\n      const response = await axios.post('http://localhost:8000/api/campaign', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Optionally, navigate to another page or show a success message\n    } catch (error) {\n      console.error(error.response.data);\n      setError(prev => ({\n        ...prev,\n        csv: 'Failed to create campaign.'\n      })); // Show error message if API call fails\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Clear the token from local storage\n    localStorage.removeItem('user'); // Clear user data if stored\n    navigate('/login'); // Redirect to login page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaign-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"campaign-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Campaign Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error.csv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleCsvUpload,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Create Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(Campaign, \"WVJa2NyphLLNmGLY1+5kiJRZ2x0=\", false, function () {\n  return [useNavigate];\n});\n_c = Campaign;\nexport default Campaign;\nvar _c;\n$RefreshReg$(_c, \"Campaign\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Papa","jsxDEV","_jsxDEV","Campaign","_s","name","setName","csvFile","setCsvFile","error","setError","csv","navigate","handleCsvUpload","e","file","target","files","prev","validTypes","includes","type","parse","header","complete","results","emails","data","map","row","email","filter","names","length","message","handleSubmit","preventDefault","hasError","formData","FormData","append","response","post","headers","console","log","handleLogout","localStorage","removeItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","accept","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/email-campaign-frontend/src/components/campaign/Campaign.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Campaign.css';\r\nimport Papa from 'papaparse';\r\n\r\nconst Campaign = () => {\r\n    const [name, setName] = useState('');\r\n    const [csvFile, setCsvFile] = useState(null);\r\n    const [error, setError] = useState({\r\n        name: '',\r\n        csv: '',\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    const handleCsvUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        setCsvFile(file);\r\n        setError((prev) => ({ ...prev, csv: '' })); // Clear previous CSV error\r\n        if (file) {\r\n            const validTypes = ['text/csv', 'application/vnd.ms-excel'];\r\n            if (!validTypes.includes(file.type)) {\r\n                setError((prev) => ({ ...prev, csv: 'Please upload a valid CSV file.' }));\r\n                setCsvFile(null);\r\n                return;\r\n            }\r\n            Papa.parse(file, {\r\n                header: true,\r\n                complete: (results) => {\r\n                    const emails = results.data.map(row => row.email).filter(email => email);\r\n                    const names = results.data.map(row => row.name).filter(name => name);\r\n\r\n                    if (emails.length === 0 || names.length === 0) {\r\n                        setError((prev) => ({ ...prev, csv: 'CSV must contain both email and name fields.' }));\r\n                        setCsvFile(null);\r\n                    }\r\n                },\r\n                error: (error) => {\r\n                    setError((prev) => ({ ...prev, csv: 'Error parsing CSV file: ' + error.message }));\r\n                    setCsvFile(null);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let hasError = false;\r\n\r\n        // Validate campaign name\r\n        if (!name) {\r\n            setError((prev) => ({ ...prev, name: 'Campaign name is required.' }));\r\n            hasError = true;\r\n        } else {\r\n            setError((prev) => ({ ...prev, name: '' })); // Clear previous error\r\n        }\r\n\r\n        // Validate CSV file\r\n        if (!csvFile) {\r\n            setError((prev) => ({ ...prev, csv: 'CSV file is required.' }));\r\n            hasError = true;\r\n        } else {\r\n            setError((prev) => ({ ...prev, csv: '' })); // Clear previous error\r\n        }\r\n\r\n        if (hasError) {\r\n            return; // Stop if there are errors\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('csv', csvFile);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/api/campaign', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            console.log(response.data);\r\n            // Optionally, navigate to another page or show a success message\r\n        } catch (error) {\r\n            console.error(error.response.data);\r\n            setError((prev) => ({ ...prev, csv: 'Failed to create campaign.' })); // Show error message if API call fails\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token'); // Clear the token from local storage\r\n        localStorage.removeItem('user'); // Clear user data if stored\r\n        navigate('/login'); // Redirect to login page\r\n    };\r\n\r\n    return (\r\n        <div className=\"campaign-container\">\r\n            {/* Logout Button */}\r\n            <button className=\"logout-button\" onClick={handleLogout}>\r\n                Logout\r\n            </button>\r\n            \r\n            <form className=\"campaign-form\" onSubmit={handleSubmit}>\r\n                <h2>Create Campaign</h2>\r\n                <div className=\"error-message\">{error.name}</div> {/* Display campaign name error */}\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Campaign Name\" \r\n                    value={name} \r\n                    onChange={(e) => setName(e.target.value)}  \r\n                    className=\"input-field\"\r\n                />\r\n                <div className=\"error-message\">{error.csv}</div> {/* Display CSV error */}\r\n                <input \r\n                    type=\"file\" \r\n                    accept=\".csv\" \r\n                    onChange={handleCsvUpload}  \r\n                    className=\"file-input\"\r\n                />\r\n                <button type=\"submit\" className=\"submit-button\">Create Campaign</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Campaign;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}