{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\email-campaign-frontend\\\\src\\\\components\\\\campaign\\\\Campaign.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\nimport './Campaign.css'; // Import the CSS file\nimport Papa from 'papaparse'; // Import PapaParse for CSV parsing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Campaign = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleCsvUpload = e => {\n    const file = e.target.files[0];\n    setCsvFile(file);\n    setError(''); // Clear previous error messages\n\n    // Validate CSV file\n    if (file) {\n      const validTypes = ['text/csv', 'application/vnd.ms-excel'];\n      if (!validTypes.includes(file.type)) {\n        setError('Please upload a valid CSV file.');\n        setCsvFile(null); // Reset csvFile if invalid\n        return;\n      }\n\n      // Use PapaParse to read the file and check for required fields\n      Papa.parse(file, {\n        header: true,\n        complete: results => {\n          const emails = results.data.map(row => row.email).filter(email => email);\n          const names = results.data.map(row => row.name).filter(name => name);\n          if (emails.length === 0 || names.length === 0) {\n            setError('CSV must contain both email and name fields.');\n            setCsvFile(null); // Reset csvFile if invalid\n          }\n        },\n        error: error => {\n          setError('Error parsing CSV file: ' + error.message);\n          setCsvFile(null); // Reset csvFile on parse error\n        }\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!csvFile) {\n      setError('CSV file is required.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('csv', csvFile);\n    try {\n      const response = await axios.post('http://localhost:8000/api/campaign', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(response.data);\n      // Optionally, navigate to another page or show a success message\n    } catch (error) {\n      console.error(error.response.data);\n      setError('Failed to create campaign.'); // Show error message if API call fails\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token'); // Clear the token from local storage\n    localStorage.removeItem('user'); // Clear user data if stored\n    navigate('/login'); // Redirect to login page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaign-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logout-button\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"campaign-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Campaign Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true,\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleCsvUpload,\n        required: true,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Create Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Campaign, \"P4fcVUVxdoJ6HyOPi9yls60BABc=\", false, function () {\n  return [useNavigate];\n});\n_c = Campaign;\nexport default Campaign;\nvar _c;\n$RefreshReg$(_c, \"Campaign\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Papa","jsxDEV","_jsxDEV","Campaign","_s","name","setName","csvFile","setCsvFile","error","setError","navigate","handleCsvUpload","e","file","target","files","validTypes","includes","type","parse","header","complete","results","emails","data","map","row","email","filter","names","length","message","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","console","log","handleLogout","localStorage","removeItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","required","accept","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/email-campaign-frontend/src/components/campaign/Campaign.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for redirection\r\nimport './Campaign.css'; // Import the CSS file\r\nimport Papa from 'papaparse'; // Import PapaParse for CSV parsing\r\n\r\nconst Campaign = () => {\r\n    const [name, setName] = useState('');\r\n    const [csvFile, setCsvFile] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    const handleCsvUpload = (e) => {\r\n        const file = e.target.files[0];\r\n        setCsvFile(file);\r\n        setError(''); // Clear previous error messages\r\n\r\n        // Validate CSV file\r\n        if (file) {\r\n            const validTypes = ['text/csv', 'application/vnd.ms-excel'];\r\n            if (!validTypes.includes(file.type)) {\r\n                setError('Please upload a valid CSV file.');\r\n                setCsvFile(null); // Reset csvFile if invalid\r\n                return;\r\n            }\r\n\r\n            // Use PapaParse to read the file and check for required fields\r\n            Papa.parse(file, {\r\n                header: true,\r\n                complete: (results) => {\r\n                    const emails = results.data.map(row => row.email).filter(email => email);\r\n                    const names = results.data.map(row => row.name).filter(name => name);\r\n\r\n                    if (emails.length === 0 || names.length === 0) {\r\n                        setError('CSV must contain both email and name fields.');\r\n                        setCsvFile(null); // Reset csvFile if invalid\r\n                    }\r\n                },\r\n                error: (error) => {\r\n                    setError('Error parsing CSV file: ' + error.message);\r\n                    setCsvFile(null); // Reset csvFile on parse error\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!csvFile) {\r\n            setError('CSV file is required.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('csv', csvFile);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/api/campaign', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n            console.log(response.data);\r\n            // Optionally, navigate to another page or show a success message\r\n        } catch (error) {\r\n            console.error(error.response.data);\r\n            setError('Failed to create campaign.'); // Show error message if API call fails\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token'); // Clear the token from local storage\r\n        localStorage.removeItem('user'); // Clear user data if stored\r\n        navigate('/login'); // Redirect to login page\r\n    };\r\n\r\n    return (\r\n        <div className=\"campaign-container\">\r\n            {/* Logout Button */}\r\n            <button className=\"logout-button\" onClick={handleLogout}>\r\n                Logout\r\n            </button>\r\n            \r\n            <form className=\"campaign-form\" onSubmit={handleSubmit}>\r\n                <h2>Create Campaign</h2>\r\n                {error && <div className=\"error-message\">{error}</div>} {/* Display error messages */}\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Campaign Name\" \r\n                    value={name} \r\n                    onChange={(e) => setName(e.target.value)} \r\n                    required \r\n                    className=\"input-field\"\r\n                />\r\n                <input \r\n                    type=\"file\" \r\n                    accept=\".csv\" \r\n                    onChange={handleCsvUpload} \r\n                    required \r\n                    className=\"file-input\"\r\n                />\r\n                <button type=\"submit\" className=\"submit-button\">Create Campaign</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Campaign;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}